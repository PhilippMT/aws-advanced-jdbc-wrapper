# This file can be used to define versions for dependencies
# However, Spring Boot's dependency management plugin already handles many of these.

# Example:
# postgresql.version=42.7.0
# flyway.version=10.6.0
# aws.jdbc.wrapper.version=2.4.0
# These would then be referenced in build.gradle.kts as findProperty("postgresql.version") or similar.
# For simplicity in this example, versions are mostly managed by Spring Boot or directly in build.gradle.kts.

# No specific properties needed for this basic setup that aren't already handled.
# Adding an empty file for structure completeness if desired, or it can be omitted.
# For this task, an empty file is fine.
# If specific versions are needed, they would be uncommented and used in build.gradle.kts.
# Example: postgresqlVersion=42.7.1
# flywayVersion=10.7.0
# awsJdbcWrapperVersion=2.4.1
# These would be used in build.gradle.kts like:
# implementation("org.postgresql:postgresql:${property("postgresqlVersion")}")
# implementation("org.flywaydb:flyway-core:${property("flywayVersion")}")
# implementation("software.amazon.jdbc:aws-advanced-jdbc-wrapper:${property("awsJdbcWrapperVersion")}")

# For now, this file will be empty or have commented out examples, as build.gradle.kts handles versions.
# This is to demonstrate structure.
org.gradle.jvmargs=--add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED
